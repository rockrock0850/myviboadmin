package com.tstar.model.sms;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class SmsReqListExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public SmsReqListExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andSiebelIdIsNull() {
            addCriterion("SIEBEL_ID is null");
            return (Criteria) this;
        }

        public Criteria andSiebelIdIsNotNull() {
            addCriterion("SIEBEL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andSiebelIdEqualTo(String value) {
            addCriterion("SIEBEL_ID =", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdNotEqualTo(String value) {
            addCriterion("SIEBEL_ID <>", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdGreaterThan(String value) {
            addCriterion("SIEBEL_ID >", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdGreaterThanOrEqualTo(String value) {
            addCriterion("SIEBEL_ID >=", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdLessThan(String value) {
            addCriterion("SIEBEL_ID <", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdLessThanOrEqualTo(String value) {
            addCriterion("SIEBEL_ID <=", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdLike(String value) {
            addCriterion("SIEBEL_ID like", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdNotLike(String value) {
            addCriterion("SIEBEL_ID not like", value, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdIn(List<String> values) {
            addCriterion("SIEBEL_ID in", values, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdNotIn(List<String> values) {
            addCriterion("SIEBEL_ID not in", values, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdBetween(String value1, String value2) {
            addCriterion("SIEBEL_ID between", value1, value2, "siebelId");
            return (Criteria) this;
        }

        public Criteria andSiebelIdNotBetween(String value1, String value2) {
            addCriterion("SIEBEL_ID not between", value1, value2, "siebelId");
            return (Criteria) this;
        }

        public Criteria andMsisdnIsNull() {
            addCriterion("MSISDN is null");
            return (Criteria) this;
        }

        public Criteria andMsisdnIsNotNull() {
            addCriterion("MSISDN is not null");
            return (Criteria) this;
        }

        public Criteria andMsisdnEqualTo(String value) {
            addCriterion("MSISDN =", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnNotEqualTo(String value) {
            addCriterion("MSISDN <>", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnGreaterThan(String value) {
            addCriterion("MSISDN >", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnGreaterThanOrEqualTo(String value) {
            addCriterion("MSISDN >=", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnLessThan(String value) {
            addCriterion("MSISDN <", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnLessThanOrEqualTo(String value) {
            addCriterion("MSISDN <=", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnLike(String value) {
            addCriterion("MSISDN like", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnNotLike(String value) {
            addCriterion("MSISDN not like", value, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnIn(List<String> values) {
            addCriterion("MSISDN in", values, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnNotIn(List<String> values) {
            addCriterion("MSISDN not in", values, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnBetween(String value1, String value2) {
            addCriterion("MSISDN between", value1, value2, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsisdnNotBetween(String value1, String value2) {
            addCriterion("MSISDN not between", value1, value2, "msisdn");
            return (Criteria) this;
        }

        public Criteria andMsgtextIsNull() {
            addCriterion("MSGTEXT is null");
            return (Criteria) this;
        }

        public Criteria andMsgtextIsNotNull() {
            addCriterion("MSGTEXT is not null");
            return (Criteria) this;
        }

        public Criteria andMsgtextEqualTo(String value) {
            addCriterion("MSGTEXT =", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextNotEqualTo(String value) {
            addCriterion("MSGTEXT <>", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextGreaterThan(String value) {
            addCriterion("MSGTEXT >", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextGreaterThanOrEqualTo(String value) {
            addCriterion("MSGTEXT >=", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextLessThan(String value) {
            addCriterion("MSGTEXT <", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextLessThanOrEqualTo(String value) {
            addCriterion("MSGTEXT <=", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextLike(String value) {
            addCriterion("MSGTEXT like", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextNotLike(String value) {
            addCriterion("MSGTEXT not like", value, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextIn(List<String> values) {
            addCriterion("MSGTEXT in", values, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextNotIn(List<String> values) {
            addCriterion("MSGTEXT not in", values, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextBetween(String value1, String value2) {
            addCriterion("MSGTEXT between", value1, value2, "msgtext");
            return (Criteria) this;
        }

        public Criteria andMsgtextNotBetween(String value1, String value2) {
            addCriterion("MSGTEXT not between", value1, value2, "msgtext");
            return (Criteria) this;
        }

        public Criteria andApplytimeIsNull() {
            addCriterion("APPLYTIME is null");
            return (Criteria) this;
        }

        public Criteria andApplytimeIsNotNull() {
            addCriterion("APPLYTIME is not null");
            return (Criteria) this;
        }

        public Criteria andApplytimeEqualTo(Date value) {
            addCriterionForJDBCDate("APPLYTIME =", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("APPLYTIME <>", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeGreaterThan(Date value) {
            addCriterionForJDBCDate("APPLYTIME >", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("APPLYTIME >=", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeLessThan(Date value) {
            addCriterionForJDBCDate("APPLYTIME <", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("APPLYTIME <=", value, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeIn(List<Date> values) {
            addCriterionForJDBCDate("APPLYTIME in", values, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("APPLYTIME not in", values, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("APPLYTIME between", value1, value2, "applytime");
            return (Criteria) this;
        }

        public Criteria andApplytimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("APPLYTIME not between", value1, value2, "applytime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeIsNull() {
            addCriterion("AGREETIME is null");
            return (Criteria) this;
        }

        public Criteria andAgreetimeIsNotNull() {
            addCriterion("AGREETIME is not null");
            return (Criteria) this;
        }

        public Criteria andAgreetimeEqualTo(Date value) {
            addCriterionForJDBCDate("AGREETIME =", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("AGREETIME <>", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("AGREETIME >", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AGREETIME >=", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeLessThan(Date value) {
            addCriterionForJDBCDate("AGREETIME <", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("AGREETIME <=", value, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeIn(List<Date> values) {
            addCriterionForJDBCDate("AGREETIME in", values, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("AGREETIME not in", values, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AGREETIME between", value1, value2, "agreetime");
            return (Criteria) this;
        }

        public Criteria andAgreetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("AGREETIME not between", value1, value2, "agreetime");
            return (Criteria) this;
        }

        public Criteria andSmstypeIsNull() {
            addCriterion("SMSTYPE is null");
            return (Criteria) this;
        }

        public Criteria andSmstypeIsNotNull() {
            addCriterion("SMSTYPE is not null");
            return (Criteria) this;
        }

        public Criteria andSmstypeEqualTo(String value) {
            addCriterion("SMSTYPE =", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeNotEqualTo(String value) {
            addCriterion("SMSTYPE <>", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeGreaterThan(String value) {
            addCriterion("SMSTYPE >", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeGreaterThanOrEqualTo(String value) {
            addCriterion("SMSTYPE >=", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeLessThan(String value) {
            addCriterion("SMSTYPE <", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeLessThanOrEqualTo(String value) {
            addCriterion("SMSTYPE <=", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeLike(String value) {
            addCriterion("SMSTYPE like", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeNotLike(String value) {
            addCriterion("SMSTYPE not like", value, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeIn(List<String> values) {
            addCriterion("SMSTYPE in", values, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeNotIn(List<String> values) {
            addCriterion("SMSTYPE not in", values, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeBetween(String value1, String value2) {
            addCriterion("SMSTYPE between", value1, value2, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmstypeNotBetween(String value1, String value2) {
            addCriterion("SMSTYPE not between", value1, value2, "smstype");
            return (Criteria) this;
        }

        public Criteria andSmssourceIsNull() {
            addCriterion("SMSSOURCE is null");
            return (Criteria) this;
        }

        public Criteria andSmssourceIsNotNull() {
            addCriterion("SMSSOURCE is not null");
            return (Criteria) this;
        }

        public Criteria andSmssourceEqualTo(String value) {
            addCriterion("SMSSOURCE =", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceNotEqualTo(String value) {
            addCriterion("SMSSOURCE <>", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceGreaterThan(String value) {
            addCriterion("SMSSOURCE >", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceGreaterThanOrEqualTo(String value) {
            addCriterion("SMSSOURCE >=", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceLessThan(String value) {
            addCriterion("SMSSOURCE <", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceLessThanOrEqualTo(String value) {
            addCriterion("SMSSOURCE <=", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceLike(String value) {
            addCriterion("SMSSOURCE like", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceNotLike(String value) {
            addCriterion("SMSSOURCE not like", value, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceIn(List<String> values) {
            addCriterion("SMSSOURCE in", values, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceNotIn(List<String> values) {
            addCriterion("SMSSOURCE not in", values, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceBetween(String value1, String value2) {
            addCriterion("SMSSOURCE between", value1, value2, "smssource");
            return (Criteria) this;
        }

        public Criteria andSmssourceNotBetween(String value1, String value2) {
            addCriterion("SMSSOURCE not between", value1, value2, "smssource");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("STATUS is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("STATUS =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("STATUS <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("STATUS >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("STATUS >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("STATUS <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("STATUS <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("STATUS like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("STATUS not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("STATUS in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("STATUS not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("STATUS between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("STATUS not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIsNull() {
            addCriterion("COMPANY_NAME is null");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIsNotNull() {
            addCriterion("COMPANY_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyNameEqualTo(String value) {
            addCriterion("COMPANY_NAME =", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotEqualTo(String value) {
            addCriterion("COMPANY_NAME <>", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameGreaterThan(String value) {
            addCriterion("COMPANY_NAME >", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameGreaterThanOrEqualTo(String value) {
            addCriterion("COMPANY_NAME >=", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameLessThan(String value) {
            addCriterion("COMPANY_NAME <", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameLessThanOrEqualTo(String value) {
            addCriterion("COMPANY_NAME <=", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameLike(String value) {
            addCriterion("COMPANY_NAME like", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotLike(String value) {
            addCriterion("COMPANY_NAME not like", value, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameIn(List<String> values) {
            addCriterion("COMPANY_NAME in", values, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotIn(List<String> values) {
            addCriterion("COMPANY_NAME not in", values, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameBetween(String value1, String value2) {
            addCriterion("COMPANY_NAME between", value1, value2, "companyName");
            return (Criteria) this;
        }

        public Criteria andCompanyNameNotBetween(String value1, String value2) {
            addCriterion("COMPANY_NAME not between", value1, value2, "companyName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SMSREQLIST
     *
     * @mbggenerated do_not_delete_during_merge Tue Sep 02 10:48:06 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SMSREQLIST
     *
     * @mbggenerated Tue Sep 02 10:48:06 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}