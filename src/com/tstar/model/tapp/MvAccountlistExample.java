package com.tstar.model.tapp;

import java.util.ArrayList;
import java.util.List;

public class MvAccountlistExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public MvAccountlistExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLoginidIsNull() {
            addCriterion("LOGINID is null");
            return (Criteria) this;
        }

        public Criteria andLoginidIsNotNull() {
            addCriterion("LOGINID is not null");
            return (Criteria) this;
        }

        public Criteria andLoginidEqualTo(String value) {
            addCriterion("LOGINID =", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidNotEqualTo(String value) {
            addCriterion("LOGINID <>", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidGreaterThan(String value) {
            addCriterion("LOGINID >", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidGreaterThanOrEqualTo(String value) {
            addCriterion("LOGINID >=", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidLessThan(String value) {
            addCriterion("LOGINID <", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidLessThanOrEqualTo(String value) {
            addCriterion("LOGINID <=", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidLike(String value) {
            addCriterion("LOGINID like", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidNotLike(String value) {
            addCriterion("LOGINID not like", value, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidIn(List<String> values) {
            addCriterion("LOGINID in", values, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidNotIn(List<String> values) {
            addCriterion("LOGINID not in", values, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidBetween(String value1, String value2) {
            addCriterion("LOGINID between", value1, value2, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginidNotBetween(String value1, String value2) {
            addCriterion("LOGINID not between", value1, value2, "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordIsNull() {
            addCriterion("LOGINPASSWORD is null");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordIsNotNull() {
            addCriterion("LOGINPASSWORD is not null");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordEqualTo(String value) {
            addCriterion("LOGINPASSWORD =", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordNotEqualTo(String value) {
            addCriterion("LOGINPASSWORD <>", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordGreaterThan(String value) {
            addCriterion("LOGINPASSWORD >", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordGreaterThanOrEqualTo(String value) {
            addCriterion("LOGINPASSWORD >=", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordLessThan(String value) {
            addCriterion("LOGINPASSWORD <", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordLessThanOrEqualTo(String value) {
            addCriterion("LOGINPASSWORD <=", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordLike(String value) {
            addCriterion("LOGINPASSWORD like", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordNotLike(String value) {
            addCriterion("LOGINPASSWORD not like", value, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordIn(List<String> values) {
            addCriterion("LOGINPASSWORD in", values, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordNotIn(List<String> values) {
            addCriterion("LOGINPASSWORD not in", values, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordBetween(String value1, String value2) {
            addCriterion("LOGINPASSWORD between", value1, value2, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordNotBetween(String value1, String value2) {
            addCriterion("LOGINPASSWORD not between", value1, value2, "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginroleIsNull() {
            addCriterion("LOGINROLE is null");
            return (Criteria) this;
        }

        public Criteria andLoginroleIsNotNull() {
            addCriterion("LOGINROLE is not null");
            return (Criteria) this;
        }

        public Criteria andLoginroleEqualTo(String value) {
            addCriterion("LOGINROLE =", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleNotEqualTo(String value) {
            addCriterion("LOGINROLE <>", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleGreaterThan(String value) {
            addCriterion("LOGINROLE >", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleGreaterThanOrEqualTo(String value) {
            addCriterion("LOGINROLE >=", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleLessThan(String value) {
            addCriterion("LOGINROLE <", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleLessThanOrEqualTo(String value) {
            addCriterion("LOGINROLE <=", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleLike(String value) {
            addCriterion("LOGINROLE like", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleNotLike(String value) {
            addCriterion("LOGINROLE not like", value, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleIn(List<String> values) {
            addCriterion("LOGINROLE in", values, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleNotIn(List<String> values) {
            addCriterion("LOGINROLE not in", values, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleBetween(String value1, String value2) {
            addCriterion("LOGINROLE between", value1, value2, "loginrole");
            return (Criteria) this;
        }

        public Criteria andLoginroleNotBetween(String value1, String value2) {
            addCriterion("LOGINROLE not between", value1, value2, "loginrole");
            return (Criteria) this;
        }

        public Criteria andAccountemailIsNull() {
            addCriterion("ACCOUNTEMAIL is null");
            return (Criteria) this;
        }

        public Criteria andAccountemailIsNotNull() {
            addCriterion("ACCOUNTEMAIL is not null");
            return (Criteria) this;
        }

        public Criteria andAccountemailEqualTo(String value) {
            addCriterion("ACCOUNTEMAIL =", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailNotEqualTo(String value) {
            addCriterion("ACCOUNTEMAIL <>", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailGreaterThan(String value) {
            addCriterion("ACCOUNTEMAIL >", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNTEMAIL >=", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailLessThan(String value) {
            addCriterion("ACCOUNTEMAIL <", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNTEMAIL <=", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailLike(String value) {
            addCriterion("ACCOUNTEMAIL like", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailNotLike(String value) {
            addCriterion("ACCOUNTEMAIL not like", value, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailIn(List<String> values) {
            addCriterion("ACCOUNTEMAIL in", values, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailNotIn(List<String> values) {
            addCriterion("ACCOUNTEMAIL not in", values, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailBetween(String value1, String value2) {
            addCriterion("ACCOUNTEMAIL between", value1, value2, "accountemail");
            return (Criteria) this;
        }

        public Criteria andAccountemailNotBetween(String value1, String value2) {
            addCriterion("ACCOUNTEMAIL not between", value1, value2, "accountemail");
            return (Criteria) this;
        }

        public Criteria andTokenIsNull() {
            addCriterion("TOKEN is null");
            return (Criteria) this;
        }

        public Criteria andTokenIsNotNull() {
            addCriterion("TOKEN is not null");
            return (Criteria) this;
        }

        public Criteria andTokenEqualTo(String value) {
            addCriterion("TOKEN =", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotEqualTo(String value) {
            addCriterion("TOKEN <>", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThan(String value) {
            addCriterion("TOKEN >", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenGreaterThanOrEqualTo(String value) {
            addCriterion("TOKEN >=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThan(String value) {
            addCriterion("TOKEN <", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLessThanOrEqualTo(String value) {
            addCriterion("TOKEN <=", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenLike(String value) {
            addCriterion("TOKEN like", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotLike(String value) {
            addCriterion("TOKEN not like", value, "token");
            return (Criteria) this;
        }

        public Criteria andTokenIn(List<String> values) {
            addCriterion("TOKEN in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotIn(List<String> values) {
            addCriterion("TOKEN not in", values, "token");
            return (Criteria) this;
        }

        public Criteria andTokenBetween(String value1, String value2) {
            addCriterion("TOKEN between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andTokenNotBetween(String value1, String value2) {
            addCriterion("TOKEN not between", value1, value2, "token");
            return (Criteria) this;
        }

        public Criteria andLoginidLikeInsensitive(String value) {
            addCriterion("upper(LOGINID) like", value.toUpperCase(), "loginid");
            return (Criteria) this;
        }

        public Criteria andLoginpasswordLikeInsensitive(String value) {
            addCriterion("upper(LOGINPASSWORD) like", value.toUpperCase(), "loginpassword");
            return (Criteria) this;
        }

        public Criteria andLoginroleLikeInsensitive(String value) {
            addCriterion("upper(LOGINROLE) like", value.toUpperCase(), "loginrole");
            return (Criteria) this;
        }

        public Criteria andAccountemailLikeInsensitive(String value) {
            addCriterion("upper(ACCOUNTEMAIL) like", value.toUpperCase(), "accountemail");
            return (Criteria) this;
        }

        public Criteria andTokenLikeInsensitive(String value) {
            addCriterion("upper(TOKEN) like", value.toUpperCase(), "token");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated do_not_delete_during_merge Fri Dec 26 15:04:48 CST 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table MV_ACCOUNTLIST
     *
     * @mbggenerated Fri Dec 26 15:04:48 CST 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}